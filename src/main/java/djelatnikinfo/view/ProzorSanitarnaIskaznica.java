/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package djelatnikinfo.view;

import com.github.lgooddatepicker.components.DatePicker;
import com.github.lgooddatepicker.components.DatePickerSettings;
import djelatnikinfo.controller.ObradaDjelatnik;
import djelatnikinfo.controller.ObradaSanitarnaIskaznica;
import djelatnikinfo.model.Djelatnik;
import djelatnikinfo.model.SanitarnaIskaznica;
import djelatnikinfo.util.AppException;
import djelatnikinfo.util.Pomocno;
import java.math.BigDecimal;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import java.util.Locale;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Alen
 */
public class ProzorSanitarnaIskaznica extends javax.swing.JFrame {

    private ObradaSanitarnaIskaznica obrada;
    private int selectedIndex;
    private DecimalFormat nf;

    /**
     * Creates new form ProzorSanitarnaIskaznica
     */
    public ProzorSanitarnaIskaznica() {
        initComponents();
        obrada = new ObradaSanitarnaIskaznica();
        DecimalFormatSymbols dfs = new DecimalFormatSymbols(new Locale("hr", "HR"));
        nf = new DecimalFormat("###,##0.00", dfs);
        selectedIndex = 0;
        postavke();
        ucitaj();
    }

    private void postavke() {
        setTitle(Pomocno.NAZIV_APLIKACIJE + " Sanitarne iskaznice");
        ucitajDjelatnike();
        prilagodiDatePicker();

    }

    private void prilagodiDatePicker() {
        prilagodiDatePickerDatumObavljenogPregleda();
        prilagodiDatePickerVrijediDo();

    }

    private void prilagodiDatePickerDatumObavljenogPregleda() {
        DatePickerSettings dps = new DatePickerSettings(new Locale("hr", "HR"));
        dps.setFormatForDatesCommonEra(Pomocno.FORMAT_DATUMA);
        dps.setTranslationClear("Ocisti");
        dps.setTranslationToday("Danas");
        dpDatumObavljenogPregleda.setSettings(dps);

    }

    private void prilagodiDatePickerVrijediDo() {

        DatePickerSettings dp = new DatePickerSettings(new Locale("hr", "HR"));
        dp.setFormatForDatesCommonEra(Pomocno.FORMAT_DATUMA);
        dp.setTranslationClear("Ocisti");
        dp.setTranslationToday("Danas");
        dpVrijediDo.setSettings(dp);

    }

    private void ucitajDjelatnike() {
        DefaultComboBoxModel<Djelatnik> m = new DefaultComboBoxModel<>();
        m.addAll(new ObradaDjelatnik().read());
        cmbDjelatnici.setModel(m);
    }

    private void ucitaj() {

        lstEntiteti.setModel(new DjelatnikListModel<>(obrada.read()));
        if (lstEntiteti.getModel().getSize() > 0) {
            lstEntiteti.setSelectedIndex(selectedIndex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstEntiteti = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        txtBrojIskaznice = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        dpDatumObavljenogPregleda = new com.github.lgooddatepicker.components.DatePicker();
        jLabel3 = new javax.swing.JLabel();
        dpVrijediDo = new com.github.lgooddatepicker.components.DatePicker();
        jLabel4 = new javax.swing.JLabel();
        txtCijena = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cmbDjelatnici = new javax.swing.JComboBox<>();
        btnDodaj = new javax.swing.JButton();
        btnPromjeni = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        lstEntiteti.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstEntiteti.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstEntitetiValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstEntiteti);

        jLabel1.setText("Broj iskaznice");

        jLabel2.setText("Datum obavljenog pregleda");

        jLabel3.setText("Vrijedi do:");

        jLabel4.setText("Cijena");

        jLabel5.setText("Djelatnici");

        btnDodaj.setText("Dodaj");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        btnPromjeni.setText("Promjeni");
        btnPromjeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPromjeniActionPerformed(evt);
            }
        });

        btnObrisi.setText("Obri≈°i");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtBrojIskaznice, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(dpVrijediDo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(dpDatumObavljenogPregleda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtCijena, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbDjelatnici, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 74, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnDodaj, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnPromjeni, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnObrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtBrojIskaznice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dpDatumObavljenogPregleda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dpVrijediDo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtCijena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbDjelatnici, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDodaj)
                    .addComponent(btnPromjeni)
                    .addComponent(btnObrisi))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void lstEntitetiValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstEntitetiValueChanged
        if (evt.getValueIsAdjusting() || lstEntiteti.getSelectedValue() == null) {
            return;
        }
        obrada.setEntitet(lstEntiteti.getSelectedValue());
        popuniView();
    }//GEN-LAST:event_lstEntitetiValueChanged

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        obrada.setEntitet(new SanitarnaIskaznica());
        popuniModel();
        try {
            obrada.create();
            selectedIndex = lstEntiteti.getModel().getSize();
            ucitaj();
        } catch (AppException ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getPoruka());
        }

    }//GEN-LAST:event_btnDodajActionPerformed

    private void btnPromjeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPromjeniActionPerformed
        if (obrada.getEntitet() == null) {
            JOptionPane.showMessageDialog(rootPane, "Prvo odaberite  stavku za  promjenu");
            return;
        }

        popuniModel();

        try {
            obrada.update();
            selectedIndex = lstEntiteti.getSelectedIndex();
            ucitaj();
            
        } catch (AppException ex) {
            obrada.refresh();
            JOptionPane.showMessageDialog(rootPane, ex.getPoruka());
        }
    }//GEN-LAST:event_btnPromjeniActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        if (lstEntiteti.getSelectedValue()==null || obrada.getEntitet() == null) {
            JOptionPane.showMessageDialog(rootPane, "Prvo  odaberite  stavku za brisanje");
            return;
        }

        try {
            obrada.delete();
            selectedIndex = lstEntiteti.getSelectedIndex() - 1;
            if (selectedIndex < 0) {
                selectedIndex = 0;
            }
            ucitaj();
        } catch (AppException ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getPoruka());

        }

    }//GEN-LAST:event_btnObrisiActionPerformed
    private void popuniModel() {
        var s = obrada.getEntitet();
        s.setBrojIskaznice(txtBrojIskaznice.getText());
        s.setDatumObavljenogPregleda(dpDatumObavljenogPregleda.getDate() != null
                ? Date.from(dpDatumObavljenogPregleda.getDate()
                        .atStartOfDay()
                        .atZone(ZoneId.systemDefault())
                        .toInstant()
                ) : null
        );
        
        s.setVrijediDo(dpVrijediDo.getDate() != null ?
                Date.from(dpVrijediDo.getDate()
                          .atStartOfDay()
                          .atZone(ZoneId.systemDefault())
                          .toInstant() ): null );
        
        
        
        try {
            s.setCijenaKn(new BigDecimal(nf.parse(txtCijena.getText()).toString()));
        } catch (Exception e) {
            s.setCijenaKn(BigDecimal.ZERO);
        }

        s.setDjelatnik((Djelatnik) cmbDjelatnici.getSelectedItem());
    }

    private void popuniView() {
        var s = obrada.getEntitet();
        txtBrojIskaznice.setText(s.getBrojIskaznice());
         Pomocno.postaviDatum(dpDatumObavljenogPregleda, s.getDatumObavljenogPregleda());
         Pomocno.postaviDatum(dpVrijediDo, s.getVrijediDo());

        try {
            txtCijena.setText(nf.format(s.getCijenaKn()));
        } catch (Exception e) {

        }

        cmbDjelatnici.setSelectedItem(s.getDjelatnik());
       
    }

   


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnPromjeni;
    private javax.swing.JComboBox<Djelatnik> cmbDjelatnici;
    private com.github.lgooddatepicker.components.DatePicker dpDatumObavljenogPregleda;
    private com.github.lgooddatepicker.components.DatePicker dpVrijediDo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<SanitarnaIskaznica> lstEntiteti;
    private javax.swing.JTextField txtBrojIskaznice;
    private javax.swing.JTextField txtCijena;
    // End of variables declaration//GEN-END:variables
}
